# Generated by Django 4.0.7 on 2022-11-02 02:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('now_app', '0001_replace_composite_keys'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComFamilySynonym',
            fields=[
                ('syn_family_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('family_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'com_family_synonym',
            },
        ),
        migrations.CreateModel(
            name='ComGenusSynonym',
            fields=[
                ('syn_genus_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('genus_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'com_genus_synonym',
            },
        ),
        migrations.CreateModel(
            name='ComMain',
            fields=[
                ('one', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'com_main',
            },
        ),
        migrations.CreateModel(
            name='ComMlist',
            fields=[
                ('museum', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('institution', models.CharField(max_length=120)),
                ('alt_int_name', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state_code', models.CharField(blank=True, max_length=5, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('used_morph', models.IntegerField(blank=True, null=True)),
                ('used_now', models.IntegerField(blank=True, null=True)),
                ('used_gene', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'com_mlist',
            },
        ),
        migrations.CreateModel(
            name='ComOrderSynonym',
            fields=[
                ('syn_order_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('order_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'com_order_synonym',
            },
        ),
        migrations.CreateModel(
            name='ComPeople',
            fields=[
                ('initials', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('surname', models.CharField(max_length=80)),
                ('full_name', models.CharField(max_length=80)),
                ('format', models.CharField(blank=True, max_length=1, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('organization', models.CharField(blank=True, max_length=80, null=True)),
                ('country', models.CharField(blank=True, max_length=80, null=True)),
                ('password_set', models.DateField(blank=True, null=True)),
                ('used_morph', models.IntegerField(blank=True, null=True)),
                ('used_now', models.IntegerField(blank=True, null=True)),
                ('used_gene', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'com_people',
            },
        ),
        migrations.CreateModel(
            name='ComSpecies',
            fields=[
                ('species_id', models.AutoField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=30)),
                ('order_name', models.CharField(max_length=30)),
                ('family_name', models.CharField(max_length=30)),
                ('subclass_or_superorder_name', models.CharField(blank=True, max_length=30, null=True)),
                ('suborder_or_superfamily_name', models.CharField(blank=True, max_length=30, null=True)),
                ('subfamily_name', models.CharField(blank=True, max_length=30, null=True)),
                ('genus_name', models.CharField(max_length=30)),
                ('species_name', models.CharField(max_length=30)),
                ('unique_identifier', models.CharField(max_length=50)),
                ('taxonomic_status', models.CharField(blank=True, max_length=50, null=True)),
                ('common_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sp_author', models.CharField(blank=True, max_length=50, null=True)),
                ('strain', models.CharField(blank=True, max_length=50, null=True)),
                ('gene', models.CharField(blank=True, max_length=30, null=True)),
                ('taxon_status', models.CharField(blank=True, max_length=10, null=True)),
                ('diet1', models.CharField(blank=True, max_length=1, null=True)),
                ('diet2', models.CharField(blank=True, max_length=9, null=True)),
                ('diet3', models.CharField(blank=True, max_length=10, null=True)),
                ('diet_description', models.CharField(blank=True, max_length=255, null=True)),
                ('rel_fib', models.CharField(blank=True, max_length=1, null=True)),
                ('selectivity', models.CharField(blank=True, max_length=1, null=True)),
                ('digestion', models.CharField(blank=True, max_length=2, null=True)),
                ('feedinghab1', models.CharField(blank=True, max_length=2, null=True)),
                ('feedinghab2', models.CharField(blank=True, max_length=8, null=True)),
                ('shelterhab1', models.CharField(blank=True, max_length=2, null=True)),
                ('shelterhab2', models.CharField(blank=True, max_length=8, null=True)),
                ('locomo1', models.CharField(blank=True, max_length=2, null=True)),
                ('locomo2', models.CharField(blank=True, max_length=15, null=True)),
                ('locomo3', models.CharField(blank=True, max_length=15, null=True)),
                ('hunt_forage', models.CharField(blank=True, max_length=8, null=True)),
                ('body_mass', models.BigIntegerField(blank=True, null=True)),
                ('brain_mass', models.IntegerField(blank=True, null=True)),
                ('sv_length', models.CharField(blank=True, max_length=7, null=True)),
                ('activity', models.CharField(blank=True, max_length=1, null=True)),
                ('sd_size', models.CharField(blank=True, max_length=1, null=True)),
                ('sd_display', models.CharField(blank=True, max_length=1, null=True)),
                ('tshm', models.CharField(blank=True, max_length=3, null=True)),
                ('symph_mob', models.CharField(blank=True, max_length=1, null=True)),
                ('relative_blade_length', models.FloatField(blank=True, null=True)),
                ('tht', models.CharField(blank=True, max_length=3, null=True)),
                ('crowntype', models.CharField(blank=True, max_length=6, null=True)),
                ('microwear', models.CharField(blank=True, max_length=7, null=True)),
                ('horizodonty', models.CharField(blank=True, max_length=3, null=True)),
                ('cusp_shape', models.CharField(blank=True, max_length=1, null=True)),
                ('cusp_count_buccal', models.CharField(blank=True, max_length=1, null=True)),
                ('cusp_count_lingual', models.CharField(blank=True, max_length=1, null=True)),
                ('loph_count_lon', models.CharField(blank=True, max_length=1, null=True)),
                ('loph_count_trs', models.CharField(blank=True, max_length=1, null=True)),
                ('fct_al', models.CharField(blank=True, max_length=1, null=True)),
                ('fct_ol', models.CharField(blank=True, max_length=1, null=True)),
                ('fct_sf', models.CharField(blank=True, max_length=1, null=True)),
                ('fct_ot', models.CharField(blank=True, max_length=1, null=True)),
                ('fct_cm', models.CharField(blank=True, max_length=1, null=True)),
                ('mesowear', models.CharField(blank=True, max_length=3, null=True)),
                ('mw_or_high', models.IntegerField(blank=True, null=True)),
                ('mw_or_low', models.IntegerField(blank=True, null=True)),
                ('mw_cs_sharp', models.IntegerField(blank=True, null=True)),
                ('mw_cs_round', models.IntegerField(blank=True, null=True)),
                ('mw_cs_blunt', models.IntegerField(blank=True, null=True)),
                ('mw_scale_min', models.IntegerField(blank=True, null=True)),
                ('mw_scale_max', models.IntegerField(blank=True, null=True)),
                ('mw_value', models.IntegerField(blank=True, null=True)),
                ('pop_struc', models.CharField(blank=True, max_length=3, null=True)),
                ('sp_status', models.IntegerField(blank=True, null=True)),
                ('used_morph', models.IntegerField(blank=True, null=True)),
                ('used_now', models.IntegerField(blank=True, null=True)),
                ('used_gene', models.IntegerField(blank=True, null=True)),
                ('sp_comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'com_species',
            },
        ),
        migrations.CreateModel(
            name='ComSubfamilySynonym',
            fields=[
                ('syn_subfamily_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('subfamily_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'com_subfamily_synonym',
            },
        ),
        migrations.CreateModel(
            name='ComTaxaSynonym',
            fields=[
                ('synonym_id', models.AutoField(primary_key=True, serialize=False)),
                ('species_id', models.IntegerField()),
                ('syn_genus_name', models.CharField(blank=True, max_length=30, null=True)),
                ('syn_species_name', models.CharField(blank=True, max_length=30, null=True)),
                ('syn_comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'com_taxa_synonym',
            },
        ),
        migrations.CreateModel(
            name='ComUsers',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('last_login', models.DateField(blank=True, null=True)),
                ('now_user_group', models.CharField(blank=True, max_length=30, null=True)),
                ('mor_user_group', models.CharField(blank=True, max_length=30, null=True)),
                ('gen_user_group', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'com_users',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_time', models.DateTimeField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=100, null=True)),
                ('server_name', models.CharField(blank=True, max_length=50, null=True)),
                ('table_name', models.CharField(blank=True, max_length=50, null=True)),
                ('pk_data', models.CharField(blank=True, max_length=200, null=True)),
                ('column_name', models.CharField(blank=True, max_length=50, null=True)),
                ('log_action', models.IntegerField(blank=True, null=True)),
                ('old_data', models.CharField(blank=True, max_length=255, null=True)),
                ('new_data', models.CharField(blank=True, max_length=255, null=True)),
                ('luid', models.IntegerField(blank=True, null=True)),
                ('suid', models.IntegerField(blank=True, null=True)),
                ('tuid', models.IntegerField(blank=True, null=True)),
                ('buid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log',
            },
        ),
        migrations.CreateModel(
            name='NowBau',
            fields=[
                ('buid', models.AutoField(primary_key=True, serialize=False)),
                ('bau_date', models.DateField(blank=True, null=True)),
                ('bau_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('bau_authorizer', models.ForeignKey(db_column='bau_authorizer', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_bau_authorizer', to='now_app.compeople')),
                ('bau_coordinator', models.ForeignKey(db_column='bau_coordinator', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_bau_coordinator', to='now_app.compeople')),
            ],
            options={
                'db_table': 'now_bau',
            },
        ),
        migrations.CreateModel(
            name='NowCollMethValues',
            fields=[
                ('coll_meth_value', models.CharField(max_length=21, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'now_coll_meth_values',
            },
        ),
        migrations.CreateModel(
            name='NowLau',
            fields=[
                ('luid', models.AutoField(primary_key=True, serialize=False)),
                ('lau_date', models.DateField(blank=True, null=True)),
                ('lau_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('lau_authorizer', models.ForeignKey(db_column='lau_authorizer', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_lau_authorizer', to='now_app.compeople')),
                ('lau_coordinator', models.ForeignKey(db_column='lau_coordinator', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_lau_coordinator', to='now_app.compeople')),
            ],
            options={
                'db_table': 'now_lau',
            },
        ),
        migrations.CreateModel(
            name='NowLoc',
            fields=[
                ('lid', models.AutoField(primary_key=True, serialize=False)),
                ('loc_name', models.CharField(max_length=30)),
                ('date_meth', models.CharField(max_length=9)),
                ('max_age', models.FloatField()),
                ('min_age', models.FloatField()),
                ('bfa_max_abs', models.CharField(blank=True, max_length=30, null=True)),
                ('bfa_min_abs', models.CharField(blank=True, max_length=30, null=True)),
                ('frac_max', models.CharField(blank=True, max_length=9, null=True)),
                ('frac_min', models.CharField(blank=True, max_length=9, null=True)),
                ('chron', models.CharField(blank=True, max_length=40, null=True)),
                ('age_comm', models.CharField(blank=True, max_length=120, null=True)),
                ('basin', models.CharField(blank=True, max_length=120, null=True)),
                ('subbasin', models.CharField(blank=True, max_length=120, null=True)),
                ('dms_lat', models.CharField(blank=True, max_length=14, null=True)),
                ('dms_long', models.CharField(blank=True, max_length=14, null=True)),
                ('dec_lat', models.FloatField()),
                ('dec_long', models.FloatField()),
                ('approx_coord', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('county', models.CharField(blank=True, max_length=20, null=True)),
                ('site_area', models.CharField(blank=True, max_length=10, null=True)),
                ('gen_loc', models.CharField(blank=True, max_length=1, null=True)),
                ('plate', models.CharField(blank=True, max_length=20, null=True)),
                ('loc_detail', models.CharField(blank=True, max_length=255, null=True)),
                ('lgroup', models.CharField(blank=True, max_length=30, null=True)),
                ('formation', models.CharField(blank=True, max_length=30, null=True)),
                ('member', models.CharField(blank=True, max_length=30, null=True)),
                ('bed', models.CharField(blank=True, max_length=30, null=True)),
                ('datum_plane', models.CharField(blank=True, max_length=50, null=True)),
                ('tos', models.FloatField(blank=True, null=True)),
                ('bos', models.FloatField(blank=True, null=True)),
                ('rock_type', models.CharField(blank=True, max_length=15, null=True)),
                ('rt_adj', models.CharField(blank=True, max_length=30, null=True)),
                ('lith_comm', models.CharField(blank=True, max_length=120, null=True)),
                ('depo_context1', models.CharField(blank=True, max_length=10, null=True)),
                ('depo_context2', models.CharField(blank=True, max_length=10, null=True)),
                ('depo_context3', models.CharField(blank=True, max_length=10, null=True)),
                ('depo_context4', models.CharField(blank=True, max_length=10, null=True)),
                ('depo_comm', models.CharField(blank=True, max_length=120, null=True)),
                ('sed_env_1', models.CharField(blank=True, max_length=13, null=True)),
                ('sed_env_2', models.CharField(blank=True, max_length=15, null=True)),
                ('event_circum', models.CharField(blank=True, max_length=15, null=True)),
                ('se_comm', models.CharField(blank=True, max_length=50, null=True)),
                ('climate_type', models.CharField(blank=True, max_length=15, null=True)),
                ('biome', models.CharField(blank=True, max_length=15, null=True)),
                ('v_ht', models.CharField(blank=True, max_length=4, null=True)),
                ('v_struct', models.CharField(blank=True, max_length=9, null=True)),
                ('v_envi_det', models.CharField(blank=True, max_length=80, null=True)),
                ('disturb', models.CharField(blank=True, max_length=16, null=True)),
                ('nutrients', models.CharField(blank=True, max_length=7, null=True)),
                ('water', models.CharField(blank=True, max_length=8, null=True)),
                ('seasonality', models.CharField(blank=True, max_length=16, null=True)),
                ('seas_intens', models.CharField(blank=True, max_length=3, null=True)),
                ('pri_prod', models.CharField(blank=True, max_length=4, null=True)),
                ('moisture', models.CharField(blank=True, max_length=3, null=True)),
                ('temperature', models.CharField(blank=True, max_length=4, null=True)),
                ('assem_fm', models.CharField(blank=True, max_length=12, null=True)),
                ('transport', models.CharField(blank=True, max_length=15, null=True)),
                ('trans_mod', models.CharField(blank=True, max_length=9, null=True)),
                ('weath_trmp', models.CharField(blank=True, max_length=9, null=True)),
                ('pt_conc', models.CharField(blank=True, max_length=14, null=True)),
                ('size_type', models.CharField(blank=True, max_length=5, null=True)),
                ('vert_pres', models.CharField(blank=True, max_length=12, null=True)),
                ('plant_pres', models.CharField(blank=True, max_length=12, null=True)),
                ('invert_pres', models.CharField(blank=True, max_length=12, null=True)),
                ('time_rep', models.CharField(blank=True, max_length=9, null=True)),
                ('appr_num_spm', models.IntegerField(blank=True, null=True)),
                ('num_spm', models.IntegerField(blank=True, null=True)),
                ('true_quant', models.CharField(blank=True, max_length=1, null=True)),
                ('complete', models.CharField(blank=True, max_length=1, null=True)),
                ('num_quad', models.IntegerField(blank=True, null=True)),
                ('taph_comm', models.CharField(blank=True, max_length=120, null=True)),
                ('tax_comm', models.CharField(blank=True, max_length=255, null=True)),
                ('loc_status', models.IntegerField(blank=True, null=True)),
                ('estimate_precip', models.IntegerField(blank=True, null=True)),
                ('estimate_temp', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('estimate_npp', models.IntegerField(blank=True, null=True)),
                ('pers_woody_cover', models.IntegerField(blank=True, null=True)),
                ('pers_pollen_ap', models.IntegerField(blank=True, null=True)),
                ('pers_pollen_nap', models.IntegerField(blank=True, null=True)),
                ('pers_pollen_other', models.IntegerField(blank=True, null=True)),
                ('hominin_skeletal_remains', models.IntegerField()),
                ('bipedal_footprints', models.IntegerField()),
                ('stone_tool_technology', models.IntegerField()),
                ('stone_tool_cut_marks_on_bones', models.IntegerField()),
                ('technological_mode_1', models.IntegerField(blank=True, null=True)),
                ('technological_mode_2', models.IntegerField(blank=True, null=True)),
                ('technological_mode_3', models.IntegerField(blank=True, null=True)),
                ('cultural_stage_1', models.CharField(blank=True, max_length=64, null=True)),
                ('cultural_stage_2', models.CharField(blank=True, max_length=64, null=True)),
                ('cultural_stage_3', models.CharField(blank=True, max_length=64, null=True)),
                ('regional_culture_1', models.CharField(blank=True, max_length=64, null=True)),
                ('regional_culture_2', models.CharField(blank=True, max_length=64, null=True)),
                ('regional_culture_3', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'now_loc',
            },
        ),
        migrations.CreateModel(
            name='NowLsCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lid', models.IntegerField()),
                ('species_id', models.IntegerField()),
                ('nis', models.IntegerField(blank=True, null=True)),
                ('pct', models.FloatField(blank=True, null=True)),
                ('quad', models.IntegerField(blank=True, null=True)),
                ('mni', models.IntegerField(blank=True, null=True)),
                ('qua', models.CharField(blank=True, max_length=1, null=True)),
                ('id_status', models.CharField(blank=True, max_length=20, null=True)),
                ('orig_entry', models.CharField(blank=True, max_length=120, null=True)),
                ('source_name', models.CharField(blank=True, max_length=120, null=True)),
                ('body_mass', models.BigIntegerField(blank=True, null=True)),
                ('mesowear', models.CharField(blank=True, max_length=3, null=True)),
                ('mw_or_high', models.IntegerField(blank=True, null=True)),
                ('mw_or_low', models.IntegerField(blank=True, null=True)),
                ('mw_cs_sharp', models.IntegerField(blank=True, null=True)),
                ('mw_cs_round', models.IntegerField(blank=True, null=True)),
                ('mw_cs_blunt', models.IntegerField(blank=True, null=True)),
                ('mw_scale_min', models.IntegerField(blank=True, null=True)),
                ('mw_scale_max', models.IntegerField(blank=True, null=True)),
                ('mw_value', models.IntegerField(blank=True, null=True)),
                ('microwear', models.CharField(blank=True, max_length=7, null=True)),
                ('dc13_mean', models.FloatField(blank=True, null=True)),
                ('dc13_n', models.IntegerField(blank=True, null=True)),
                ('dc13_max', models.FloatField(blank=True, null=True)),
                ('dc13_min', models.FloatField(blank=True, null=True)),
                ('dc13_stdev', models.FloatField(blank=True, null=True)),
                ('do18_mean', models.FloatField(blank=True, null=True)),
                ('do18_n', models.IntegerField(blank=True, null=True)),
                ('do18_max', models.FloatField(blank=True, null=True)),
                ('do18_min', models.FloatField(blank=True, null=True)),
                ('do18_stdev', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'now_ls_copy',
            },
        ),
        migrations.CreateModel(
            name='NowProj',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('proj_code', models.CharField(blank=True, max_length=10, null=True)),
                ('proj_name', models.CharField(blank=True, max_length=80, null=True)),
                ('proj_status', models.CharField(blank=True, max_length=10, null=True)),
                ('proj_records', models.IntegerField(blank=True, null=True)),
                ('contact', models.ForeignKey(db_column='contact', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.compeople')),
            ],
            options={
                'db_table': 'now_proj',
            },
        ),
        migrations.CreateModel(
            name='NowRegCoord',
            fields=[
                ('reg_coord_id', models.AutoField(primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'now_reg_coord',
            },
        ),
        migrations.CreateModel(
            name='NowRegionalCulture',
            fields=[
                ('regional_culture_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('regional_culture_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'now_regional_culture',
            },
        ),
        migrations.CreateModel(
            name='NowSau',
            fields=[
                ('suid', models.AutoField(primary_key=True, serialize=False)),
                ('sau_date', models.DateField(blank=True, null=True)),
                ('sau_comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('sau_authorizer', models.ForeignKey(db_column='sau_authorizer', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_sau_authorizer', to='now_app.compeople')),
                ('sau_coordinator', models.ForeignKey(db_column='sau_coordinator', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_sau_coordinator', to='now_app.compeople')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.comspecies')),
            ],
            options={
                'db_table': 'now_sau',
            },
        ),
        migrations.CreateModel(
            name='NowSpCoord',
            fields=[
                ('sp_coord_id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_group', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'now_sp_coord',
            },
        ),
        migrations.CreateModel(
            name='NowSsValues',
            fields=[
                ('ss_value', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'now_ss_values',
            },
        ),
        migrations.CreateModel(
            name='NowStratCoord',
            fields=[
                ('strat_coord_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'now_strat_coord',
            },
        ),
        migrations.CreateModel(
            name='NowTau',
            fields=[
                ('tuid', models.AutoField(primary_key=True, serialize=False)),
                ('tau_date', models.DateField(blank=True, null=True)),
                ('tau_comment', models.CharField(blank=True, max_length=255, null=True)),
                ('tau_authorizer', models.ForeignKey(db_column='tau_authorizer', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_tau_authorizer', to='now_app.compeople')),
                ('tau_coordinator', models.ForeignKey(db_column='tau_coordinator', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_tau_coordinator', to='now_app.compeople')),
            ],
            options={
                'db_table': 'now_tau',
            },
        ),
        migrations.CreateModel(
            name='NowTimeUnit',
            fields=[
                ('tu_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('tu_display_name', models.CharField(max_length=100)),
                ('rank', models.CharField(blank=True, max_length=15, null=True)),
                ('tu_comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'now_time_unit',
            },
        ),
        migrations.CreateModel(
            name='NowTuBound',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('b_name', models.CharField(blank=True, max_length=150, null=True)),
                ('age', models.FloatField(blank=True, null=True)),
                ('b_comment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'now_tu_bound',
            },
        ),
        migrations.CreateModel(
            name='NowTuSequence',
            fields=[
                ('sequence', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('seq_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'now_tu_sequence',
            },
        ),
        migrations.CreateModel(
            name='RefJournal',
            fields=[
                ('journal_id', models.AutoField(primary_key=True, serialize=False)),
                ('journal_title', models.CharField(blank=True, max_length=255, null=True)),
                ('short_title', models.CharField(blank=True, max_length=100, null=True)),
                ('alt_title', models.CharField(blank=True, max_length=255, null=True)),
                ('issn', models.CharField(blank=True, db_column='ISSN', max_length=10, null=True)),
            ],
            options={
                'db_table': 'ref_journal',
            },
        ),
        migrations.CreateModel(
            name='RefKeywords',
            fields=[
                ('keywords_id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'ref_keywords',
            },
        ),
        migrations.CreateModel(
            name='RefRefType',
            fields=[
                ('ref_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('ref_type', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'ref_ref_type',
            },
        ),
        migrations.CreateModel(
            name='RefRef',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('title_primary', models.CharField(blank=True, max_length=255, null=True)),
                ('date_primary', models.IntegerField(blank=True, null=True)),
                ('volume', models.CharField(blank=True, max_length=10, null=True)),
                ('issue', models.CharField(blank=True, max_length=10, null=True)),
                ('start_page', models.IntegerField(blank=True, null=True)),
                ('end_page', models.IntegerField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('pub_place', models.CharField(blank=True, max_length=255, null=True)),
                ('title_secondary', models.CharField(blank=True, max_length=255, null=True)),
                ('date_secondary', models.IntegerField(blank=True, null=True)),
                ('title_series', models.CharField(blank=True, max_length=255, null=True)),
                ('issn_isbn', models.CharField(blank=True, max_length=30, null=True)),
                ('ref_abstract', models.TextField(blank=True, null=True)),
                ('web_url', models.CharField(blank=True, max_length=255, null=True)),
                ('misc_1', models.CharField(blank=True, max_length=255, null=True)),
                ('misc_2', models.CharField(blank=True, max_length=255, null=True)),
                ('gen_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('printed_language', models.CharField(blank=True, max_length=50, null=True)),
                ('exact_date', models.DateField(blank=True, null=True)),
                ('used_morph', models.IntegerField(blank=True, null=True)),
                ('used_now', models.IntegerField(blank=True, null=True)),
                ('used_gene', models.IntegerField(blank=True, null=True)),
                ('journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refjournal')),
                ('ref_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refreftype')),
            ],
            options={
                'db_table': 'ref_ref',
            },
        ),
        migrations.CreateModel(
            name='RefKeywordsRef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refkeywords')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
            ],
            options={
                'db_table': 'ref_keywords_ref',
            },
        ),
        migrations.CreateModel(
            name='RefFieldName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField(db_column='field_ID')),
                ('ref_field_name', models.CharField(blank=True, max_length=50, null=True)),
                ('display', models.IntegerField(blank=True, null=True)),
                ('label_x', models.IntegerField(blank=True, null=True)),
                ('label_y', models.IntegerField(blank=True, null=True)),
                ('field_x', models.IntegerField(blank=True, null=True)),
                ('field_y', models.IntegerField(blank=True, null=True)),
                ('field_name', models.CharField(blank=True, max_length=50, null=True)),
                ('ref_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refreftype')),
            ],
            options={
                'db_table': 'ref_field_name',
            },
        ),
        migrations.CreateModel(
            name='RefAuthors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField()),
                ('au_num', models.IntegerField()),
                ('author_surname', models.CharField(blank=True, max_length=255, null=True)),
                ('author_initials', models.CharField(blank=True, max_length=20, null=True)),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
            ],
            options={
                'db_table': 'ref_authors',
            },
        ),
        migrations.CreateModel(
            name='NowTur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid', models.ForeignKey(db_column='bid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtubound')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
            ],
            options={
                'db_table': 'now_tur',
            },
        ),
        migrations.CreateModel(
            name='NowTr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
                ('tuid', models.ForeignKey(db_column='tuid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtau')),
            ],
            options={
                'db_table': 'now_tr',
            },
        ),
        migrations.CreateModel(
            name='NowTimeUpdate',
            fields=[
                ('time_update_id', models.AutoField(primary_key=True, serialize=False)),
                ('coordinator', models.CharField(max_length=10)),
                ('authorizer', models.CharField(max_length=10)),
                ('date', models.DateField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('lower_buid', models.ForeignKey(blank=True, db_column='lower_buid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_lower_buid', to='now_app.nowbau')),
                ('tu_name', models.ForeignKey(db_column='tu_name', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtimeunit')),
                ('tuid', models.ForeignKey(blank=True, db_column='tuid', null=True, on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtau')),
                ('upper_buid', models.ForeignKey(blank=True, db_column='upper_buid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_upper_buid', to='now_app.nowbau')),
            ],
            options={
                'db_table': 'now_time_update',
            },
        ),
        migrations.AddField(
            model_name='nowtimeunit',
            name='low_bnd',
            field=models.ForeignKey(db_column='low_bnd', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_low_bnd', to='now_app.nowtubound'),
        ),
        migrations.AddField(
            model_name='nowtimeunit',
            name='sequence',
            field=models.ForeignKey(db_column='sequence', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowtusequence'),
        ),
        migrations.AddField(
            model_name='nowtimeunit',
            name='up_bnd',
            field=models.ForeignKey(db_column='up_bnd', on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_up_bnd', to='now_app.nowtubound'),
        ),
        migrations.AddField(
            model_name='nowtau',
            name='tu_name',
            field=models.ForeignKey(db_column='tu_name', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtimeunit'),
        ),
        migrations.CreateModel(
            name='NowSynLoc',
            fields=[
                ('syn_id', models.AutoField(primary_key=True, serialize=False)),
                ('synonym', models.CharField(blank=True, max_length=30, null=True)),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc')),
            ],
            options={
                'db_table': 'now_syn_loc',
            },
        ),
        migrations.CreateModel(
            name='NowStratCoordPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.ForeignKey(db_column='initials', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.compeople')),
                ('strat_coord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowstratcoord')),
            ],
            options={
                'db_table': 'now_strat_coord_people',
            },
        ),
        migrations.CreateModel(
            name='NowSs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sed_struct', models.CharField(max_length=30)),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc')),
            ],
            options={
                'db_table': 'now_ss',
            },
        ),
        migrations.CreateModel(
            name='NowSr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
                ('suid', models.ForeignKey(db_column='suid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowsau')),
            ],
            options={
                'db_table': 'now_sr',
            },
        ),
        migrations.CreateModel(
            name='NowSpCoordTaxa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_name', models.CharField(max_length=30)),
                ('family_name', models.CharField(max_length=30)),
                ('sp_coord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowspcoord')),
            ],
            options={
                'db_table': 'now_sp_coord_taxa',
            },
        ),
        migrations.CreateModel(
            name='NowSpCoordPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.ForeignKey(db_column='initials', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.compeople')),
                ('sp_coord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowspcoord')),
            ],
            options={
                'db_table': 'now_sp_coord_people',
            },
        ),
        migrations.CreateModel(
            name='NowRegCoordPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.ForeignKey(db_column='initials', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.compeople')),
                ('reg_coord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowregcoord')),
            ],
            options={
                'db_table': 'now_reg_coord_people',
            },
        ),
        migrations.CreateModel(
            name='NowRegCoordCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=80)),
                ('reg_coord', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowregcoord')),
            ],
            options={
                'db_table': 'now_reg_coord_country',
            },
        ),
        migrations.CreateModel(
            name='NowPsr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowproj')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.comspecies')),
            ],
            options={
                'db_table': 'now_psr',
            },
        ),
        migrations.CreateModel(
            name='NowProjPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.ForeignKey(db_column='initials', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.compeople')),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowproj')),
            ],
            options={
                'db_table': 'now_proj_people',
            },
        ),
        migrations.CreateModel(
            name='NowPlr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc')),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowproj')),
            ],
            options={
                'db_table': 'now_plr',
            },
        ),
        migrations.CreateModel(
            name='NowMus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc')),
                ('museum', models.ForeignKey(db_column='museum', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.commlist')),
            ],
            options={
                'db_table': 'now_mus',
            },
        ),
        migrations.CreateModel(
            name='NowLs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nis', models.IntegerField(blank=True, null=True)),
                ('pct', models.FloatField(blank=True, null=True)),
                ('quad', models.IntegerField(blank=True, null=True)),
                ('mni', models.IntegerField(blank=True, null=True)),
                ('qua', models.CharField(blank=True, max_length=1, null=True)),
                ('id_status', models.CharField(blank=True, max_length=20, null=True)),
                ('orig_entry', models.CharField(blank=True, max_length=120, null=True)),
                ('source_name', models.CharField(blank=True, max_length=120, null=True)),
                ('body_mass', models.BigIntegerField(blank=True, null=True)),
                ('mesowear', models.CharField(blank=True, max_length=3, null=True)),
                ('mw_or_high', models.IntegerField(blank=True, null=True)),
                ('mw_or_low', models.IntegerField(blank=True, null=True)),
                ('mw_cs_sharp', models.IntegerField(blank=True, null=True)),
                ('mw_cs_round', models.IntegerField(blank=True, null=True)),
                ('mw_cs_blunt', models.IntegerField(blank=True, null=True)),
                ('mw_scale_min', models.IntegerField(blank=True, null=True)),
                ('mw_scale_max', models.IntegerField(blank=True, null=True)),
                ('mw_value', models.IntegerField(blank=True, null=True)),
                ('microwear', models.CharField(blank=True, max_length=7, null=True)),
                ('dc13_mean', models.FloatField(blank=True, null=True)),
                ('dc13_n', models.IntegerField(blank=True, null=True)),
                ('dc13_max', models.FloatField(blank=True, null=True)),
                ('dc13_min', models.FloatField(blank=True, null=True)),
                ('dc13_stdev', models.FloatField(blank=True, null=True)),
                ('do18_mean', models.FloatField(blank=True, null=True)),
                ('do18_n', models.IntegerField(blank=True, null=True)),
                ('do18_max', models.FloatField(blank=True, null=True)),
                ('do18_min', models.FloatField(blank=True, null=True)),
                ('do18_stdev', models.FloatField(blank=True, null=True)),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.nowloc')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.comspecies')),
            ],
            options={
                'db_table': 'now_ls',
            },
        ),
        migrations.CreateModel(
            name='NowLr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('luid', models.ForeignKey(db_column='luid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowlau')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
            ],
            options={
                'db_table': 'now_lr',
            },
        ),
        migrations.AddField(
            model_name='nowloc',
            name='bfa_max',
            field=models.ForeignKey(blank=True, db_column='bfa_max', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_bfa_max', to='now_app.nowtimeunit'),
        ),
        migrations.AddField(
            model_name='nowloc',
            name='bfa_min',
            field=models.ForeignKey(blank=True, db_column='bfa_min', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(class)s_bfa_min', to='now_app.nowtimeunit'),
        ),
        migrations.AddField(
            model_name='nowlau',
            name='lid',
            field=models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc'),
        ),
        migrations.CreateModel(
            name='NowCollMeth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coll_meth', models.CharField(max_length=21)),
                ('lid', models.ForeignKey(db_column='lid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowloc')),
            ],
            options={
                'db_table': 'now_coll_meth',
            },
        ),
        migrations.CreateModel(
            name='NowBr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buid', models.ForeignKey(db_column='buid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowbau')),
                ('rid', models.ForeignKey(db_column='rid', on_delete=django.db.models.deletion.DO_NOTHING, to='now_app.refref')),
            ],
            options={
                'db_table': 'now_br',
            },
        ),
        migrations.AddField(
            model_name='nowbau',
            name='bid',
            field=models.ForeignKey(db_column='bid', on_delete=django.db.models.deletion.CASCADE, to='now_app.nowtubound'),
        ),
    ]
